type Error {
    field: String!
    error: String!
}

type User {
    id: ID!
    name: String!
    username: String!
    email: String!
    city: String!
    state: String!
}

type Event {
    id: ID!
    eventName: String!
    timeStart: String!
    timeEnd: String!
    venue: String!
    description: String!
    interest: String!
    organizer: String!
}

type UserResponse {
    user: User
    error: String
}

type MutationResponse {
    status: String!
    error: String
}

type GetEventsResponse {
    events: [Event]!
    error: String
}

type Query {
    me: UserResponse!
    getEvents: GetEventsResponse!
}

type Mutation {
    login(email: String!, password: String!): UserResponse!
    register(
        name: String!
        email: String!
        password: String!
        state: String!
        city: String!
    ): UserResponse!
    createEvent(
        interest: String!
        eventName: String!
        timeStart: String!
        timeEnd: String!
        venue: String!
        description: String!
    ): MutationResponse!
}
